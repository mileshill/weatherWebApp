{"version":3,"sources":["webpack:///./src/app/shared/settings/settings.component.ts","webpack:///./src/app/shared/weather/weather.component.ts","webpack:///./src/app/weather-underground.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/shared/settings/settings.component.css","webpack:///./src/app/shared/weather/weather.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/shared/settings/settings.component.html","webpack:///./src/app/shared/weather/weather.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/settings/settings.component.ts","import { Component, OnInit } from '@angular/core';\nimport { WeatherUndergroundService } from '../../weather-underground.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  private weather: any;\n  private searchStr: string;\n  private results: any;\n  private zmw: string;\n\n  constructor(private weatherService: WeatherUndergroundService) {}\n\n  ngOnInit() {\n    this.getDefaultCity()\n\n    this.weatherService.getWeather(this.zmw)\n      .subscribe(weather => {\n        this.weather = weather.current_observation;\n      })\n\n    \n  }\n\n  // Service call to Weather API\n  // Accepts location object and queries \n  // using the city zmw\n  getWeather(location){\n    this.weatherService.getWeather(location.zmw)\n      .subscribe(weather => {\n        this.weather = weather;\n      })\n  }\n\n  // Called on `keyup` events in `input`\n  // Returns array of city objects matching input\n  getQuery(){\n    this.weatherService.searchCities(this.searchStr)\n      .subscribe(res => {\n        this.results = res.RESULTS;\n      })\n  }\n\n  // Initializes Houston, TX as default city\n  getDefaultCity(){\n    this.zmw = '77001.1.99999'; // Houston, Tx\n  }\n\n  // Invoked on `click` events after user city search.\n  // Result.zmw used to update location\n  setLocation(result){\n    this.zmw = result.zmw;\n    this.results = null;\n    \n    this.weatherService.getWeather(this.zmw)\n      .subscribe(weather => {\n        this.weather = weather.current_observation;\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/weather/weather.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class WeatherUndergroundService {\n  private http: any;\n  private apiKey: string;\n  private conditionsUrl: string;\n  private searchUrl: string;\n\n  constructor(http: Http) {\n    this.http = http; \n    this.apiKey = '50f6ae31331bce3b';\n    this.conditionsUrl = 'http://api.wunderground.com/api/'+this.apiKey+'/conditions/q';\n    this.searchUrl = 'http://localhost:4200/api/aq?query=';\n}\n\n\n  getWeather(zmw: string){\n    return this.http.get(this.conditionsUrl +'/zmw:'+ zmw +'.json')\n      .map(res => res.json())\n  }\n\n  searchCities(searchStr: string){\n    return this.http.get(this.searchUrl + searchStr)\n      .map(res => res.json())\n  }\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/weather-underground.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 389;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 389\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n  public localWeather: JSON;\n\n  constructor(){}\n\n \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n// Services\nimport { WeatherUndergroundService } from './weather-underground.service';\n\n// Components\nimport { WeatherComponent } from './shared/weather/weather.component';\nimport { SettingsComponent } from './shared/settings/settings.component';\n\n// Routing\nimport { routing } from './app.routes';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing\n  ],\n  providers: [WeatherUndergroundService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { SettingsComponent } from './shared/settings/settings.component';\nimport { WeatherComponent } from './shared/weather/weather.component';\n\n\n// Route Configuration\nexport const routes: Routes = [\n    {path: 'settings', component: SettingsComponent},\n    {path: '', redirectTo: '/weather', pathMatch: 'full'},\n    {path: 'weather', component: WeatherComponent}\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 670\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/settings/settings.component.css\n// module id = 671\n// module chunks = 1","module.exports = \"ul {\\n  list-style-type: none;\\n  padding: 0;\\n  margin: 1em;\\n}\\n\\n.main {\\n    background: #333b5b;\\n    color:#ffffff;\\n}\\n\\n.temp {\\n    font-size: 70px;\\n    text-align: center;\\n    font-weight: normal;\\n}\\n\\n.location, .icon, .desc {\\n    text-align: center;\\n}\\n\\n#city-input{\\n    margin-top: 0.5em;\\n    padding-top: 1em;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/weather/weather.component.css\n// module id = 672\n// module chunks = 1","module.exports = \"\\n\\n<ul class=\\\"menu\\\">\\n  <li><a [routerLink]=\\\"['/weather']\\\">Weather</a></li>\\n  <!--<li><a [routerLink]=\\\"['/settings']\\\">Settings</a></li>-->\\n</ul>\\n\\n  <router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 673\n// module chunks = 1","module.exports = \"<p>\\n  settings works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/settings/settings.component.html\n// module id = 674\n// module chunks = 1","module.exports = \"<div class=\\\"main\\\">\\n\\n  <div class=\\\"small-12 columns\\\" id=\\\"city-input\\\">\\n    <input (keyup)=\\\"getQuery()\\\" [(ngModel)]=\\\"searchStr\\\" name=\\\"searchStr\\\" type=\\\"text\\\" value=\\\"\\\" placeholder=\\\"City\\\"/>\\n    \\n  </div>\\n\\n  <div *ngIf=\\\"results\\\">\\n    <ul>\\n      <li *ngFor=\\\"let result of results\\\" (click)=\\\"setLocation(result)\\\">{{result.name}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"weather\\\">\\n    <div class=\\\"small-12\\\">\\n      <h2 class=\\\"location\\\">{{ weather.display_location.full }}</h2>\\n      <div class=\\\"icon\\\"><img src=\\\"{{ weather.icon_url }}\\\"></div>\\n      <h3 class=\\\"desc\\\">{{weather.weather}}</h3>\\n      <h1 class=\\\"temp\\\">{{weather.temp_f}}&deg;</h1>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"small-12 columns\\\">\\n        <ul>\\n          <li><strong>Temp: </strong>{{weather.temperature_string}}</li>\\n          <hr>\\n          <li><strong>Relative Humidity: </strong>{{weather.relative_humidity}}</li>\\n          <hr>\\n          <li><strong>Dewpoint: </strong>{{weather.dewpoint_string}}</li>\\n          <hr>\\n          <li><strong>Visibility: </strong>{{weather.visibility_mi}} miles</li>\\n          <hr>\\n          <li><strong>Wind: </strong>{{weather.wind_mph}} mph</li>\\n          <hr>\\n          <li><strong>Wind Direction: </strong>{{weather.wind_dir}}</li>\\n          <hr>\\n          <li><strong>Heat Index: </strong>{{weather.heat_index_string}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/weather/weather.component.html\n// module id = 675\n// module chunks = 1"],"sourceRoot":""}